#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SnitzData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Forum")]
	public partial class SnitzDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertForum(Forum instance);
    partial void UpdateForum(Forum instance);
    partial void DeleteForum(Forum instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertTopic(Topic instance);
    partial void UpdateTopic(Topic instance);
    partial void DeleteTopic(Topic instance);
    partial void InsertReply(Reply instance);
    partial void UpdateReply(Reply instance);
    partial void DeleteReply(Reply instance);
    partial void InsertSubscriptions(Subscriptions instance);
    partial void UpdateSubscriptions(Subscriptions instance);
    partial void DeleteSubscriptions(Subscriptions instance);
    partial void InsertWordFilter(WordFilter instance);
    partial void UpdateWordFilter(WordFilter instance);
    partial void DeleteWordFilter(WordFilter instance);
    partial void InsertNameFilter(NameFilter instance);
    partial void UpdateNameFilter(NameFilter instance);
    partial void DeleteNameFilter(NameFilter instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    #endregion
		
		public SnitzDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SnitzDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SnitzDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SnitzDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Forum> Forums
		{
			get
			{
				return this.GetTable<Forum>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Topic> Topics
		{
			get
			{
				return this.GetTable<Topic>();
			}
		}
		
		public System.Data.Linq.Table<Reply> Replies
		{
			get
			{
				return this.GetTable<Reply>();
			}
		}
		
		public System.Data.Linq.Table<Subscriptions> Subscriptions
		{
			get
			{
				return this.GetTable<Subscriptions>();
			}
		}
		
		public System.Data.Linq.Table<WordFilter> WordFilters
		{
			get
			{
				return this.GetTable<WordFilter>();
			}
		}
		
		public System.Data.Linq.Table<NameFilter> NameFilters
		{
			get
			{
				return this.GetTable<NameFilter>();
			}
		}
		
		public System.Data.Linq.Table<ForumRoles> ForumRoles
		{
			get
			{
				return this.GetTable<ForumRoles>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_FORUM")]
	public partial class Forum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CAT_ID;
		
		private int _Id;
		
		private short _Status;
		
		private string _Subject;
		
		private string _URL;
		
		private string _Description;
		
		private System.Nullable<int> _TopicCount;
		
		private System.Nullable<int> _PostCount;
		
		private string _LastPostDate;
		
		private string _F_PASSWORD_NEW;
		
		private System.Nullable<int> _F_PRIVATEFORUMS;
		
		private System.Nullable<short> _F_TYPE;
		
		private string _F_IP;
		
		private System.Nullable<int> _LastPostAuthor;
		
		private System.Nullable<int> _ArchivedTopicCount;
		
		private System.Nullable<int> _ArchivedPostCount;
		
		private int _F_MODERATION;
		
		private System.Nullable<int> _F_SUBSCRIPTION;
		
		private System.Nullable<int> _Order;
		
		private System.Nullable<bool> _UpdatePostCount;
		
		private System.Nullable<int> _LastTopicId;
		
		private System.Nullable<int> _LastreplyId;
		
		private bool _AllowPolls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIdChanging(int value);
    partial void OnCatIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnF_STATUSChanging(short value);
    partial void OnF_STATUSChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTopicCountChanging(System.Nullable<int> value);
    partial void OnTopicCountChanged();
    partial void OnPostCountChanging(System.Nullable<int> value);
    partial void OnPostCountChanged();
    partial void OnF_LAST_POSTChanging(string value);
    partial void OnF_LAST_POSTChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnF_PRIVATEFORUMSChanging(System.Nullable<int> value);
    partial void OnF_PRIVATEFORUMSChanged();
    partial void OnTypeChanging(System.Nullable<short> value);
    partial void OnTypeChanged();
    partial void OnPostersIPChanging(string value);
    partial void OnPostersIPChanged();
    partial void OnF_LAST_POST_AUTHORChanging(System.Nullable<int> value);
    partial void OnF_LAST_POST_AUTHORChanged();
    partial void OnArchivedTopicCountChanging(System.Nullable<int> value);
    partial void OnArchivedTopicCountChanged();
    partial void OnArchivedPostCountChanging(System.Nullable<int> value);
    partial void OnArchivedPostCountChanged();
    partial void OnF_MODERATIONChanging(int value);
    partial void OnF_MODERATIONChanged();
    partial void OnSubscriptionLevelChanging(System.Nullable<int> value);
    partial void OnSubscriptionLevelChanged();
    partial void OnOrderChanging(System.Nullable<int> value);
    partial void OnOrderChanged();
    partial void OnUpdatePostCountChanging(System.Nullable<bool> value);
    partial void OnUpdatePostCountChanged();
    partial void OnLastTopicIdChanging(System.Nullable<int> value);
    partial void OnLastTopicIdChanged();
    partial void OnLastReplyIdChanging(System.Nullable<int> value);
    partial void OnLastReplyIdChanged();
    partial void OnAllowPollsChanging(bool value);
    partial void OnAllowPollsChanged();
    #endregion
		
		public Forum()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CAT_ID", Storage="_CAT_ID", DbType="Int NOT NULL")]
		public int CatId
		{
			get
			{
				return this._CAT_ID;
			}
			set
			{
				if ((this._CAT_ID != value))
				{
					this.OnCatIdChanging(value);
					this.SendPropertyChanging();
					this._CAT_ID = value;
					this.SendPropertyChanged("CatId");
					this.OnCatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FORUM_ID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		internal short F_STATUS
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnF_STATUSChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("F_STATUS");
					this.OnF_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_SUBJECT", Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_URL", Storage="_URL", DbType="NVarChar(255)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_DESCRIPTION", Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_TOPICS", Storage="_TopicCount", DbType="Int")]
		public System.Nullable<int> TopicCount
		{
			get
			{
				return this._TopicCount;
			}
			set
			{
				if ((this._TopicCount != value))
				{
					this.OnTopicCountChanging(value);
					this.SendPropertyChanging();
					this._TopicCount = value;
					this.SendPropertyChanged("TopicCount");
					this.OnTopicCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_COUNT", Storage="_PostCount", DbType="Int")]
		public System.Nullable<int> PostCount
		{
			get
			{
				return this._PostCount;
			}
			set
			{
				if ((this._PostCount != value))
				{
					this.OnPostCountChanging(value);
					this.SendPropertyChanging();
					this._PostCount = value;
					this.SendPropertyChanged("PostCount");
					this.OnPostCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPostDate", DbType="NVarChar(14)")]
		internal string F_LAST_POST
		{
			get
			{
				return this._LastPostDate;
			}
			set
			{
				if ((this._LastPostDate != value))
				{
					this.OnF_LAST_POSTChanging(value);
					this.SendPropertyChanging();
					this._LastPostDate = value;
					this.SendPropertyChanged("F_LAST_POST");
					this.OnF_LAST_POSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_PASSWORD_NEW", Storage="_F_PASSWORD_NEW", DbType="NVarChar(255)")]
		public string Password
		{
			get
			{
				return this._F_PASSWORD_NEW;
			}
			set
			{
				if ((this._F_PASSWORD_NEW != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._F_PASSWORD_NEW = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_PRIVATEFORUMS", DbType="Int")]
		public System.Nullable<int> F_PRIVATEFORUMS
		{
			get
			{
				return this._F_PRIVATEFORUMS;
			}
			set
			{
				if ((this._F_PRIVATEFORUMS != value))
				{
					this.OnF_PRIVATEFORUMSChanging(value);
					this.SendPropertyChanging();
					this._F_PRIVATEFORUMS = value;
					this.SendPropertyChanged("F_PRIVATEFORUMS");
					this.OnF_PRIVATEFORUMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_TYPE", Storage="_F_TYPE", DbType="SmallInt")]
		public System.Nullable<short> Type
		{
			get
			{
				return this._F_TYPE;
			}
			set
			{
				if ((this._F_TYPE != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._F_TYPE = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_IP", Storage="_F_IP", DbType="NVarChar(50)")]
		public string PostersIP
		{
			get
			{
				return this._F_IP;
			}
			set
			{
				if ((this._F_IP != value))
				{
					this.OnPostersIPChanging(value);
					this.SendPropertyChanging();
					this._F_IP = value;
					this.SendPropertyChanged("PostersIP");
					this.OnPostersIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPostAuthor", DbType="Int")]
		internal System.Nullable<int> F_LAST_POST_AUTHOR
		{
			get
			{
				return this._LastPostAuthor;
			}
			set
			{
				if ((this._LastPostAuthor != value))
				{
					this.OnF_LAST_POST_AUTHORChanging(value);
					this.SendPropertyChanging();
					this._LastPostAuthor = value;
					this.SendPropertyChanged("F_LAST_POST_AUTHOR");
					this.OnF_LAST_POST_AUTHORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_A_TOPICS", Storage="_ArchivedTopicCount", DbType="Int")]
		public System.Nullable<int> ArchivedTopicCount
		{
			get
			{
				return this._ArchivedTopicCount;
			}
			set
			{
				if ((this._ArchivedTopicCount != value))
				{
					this.OnArchivedTopicCountChanging(value);
					this.SendPropertyChanging();
					this._ArchivedTopicCount = value;
					this.SendPropertyChanged("ArchivedTopicCount");
					this.OnArchivedTopicCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_A_COUNT", Storage="_ArchivedPostCount", DbType="Int")]
		public System.Nullable<int> ArchivedPostCount
		{
			get
			{
				return this._ArchivedPostCount;
			}
			set
			{
				if ((this._ArchivedPostCount != value))
				{
					this.OnArchivedPostCountChanging(value);
					this.SendPropertyChanging();
					this._ArchivedPostCount = value;
					this.SendPropertyChanged("ArchivedPostCount");
					this.OnArchivedPostCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_MODERATION", DbType="Int")]
		internal int F_MODERATION
		{
			get
			{
				return this._F_MODERATION;
			}
			set
			{
				if ((this._F_MODERATION != value))
				{
					this.OnF_MODERATIONChanging(value);
					this.SendPropertyChanging();
					this._F_MODERATION = value;
					this.SendPropertyChanged("F_MODERATION");
					this.OnF_MODERATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_SUBSCRIPTION", Storage="_F_SUBSCRIPTION", DbType="Int")]
		public System.Nullable<int> SubscriptionLevel
		{
			get
			{
				return this._F_SUBSCRIPTION;
			}
			set
			{
				if ((this._F_SUBSCRIPTION != value))
				{
					this.OnSubscriptionLevelChanging(value);
					this.SendPropertyChanging();
					this._F_SUBSCRIPTION = value;
					this.SendPropertyChanged("SubscriptionLevel");
					this.OnSubscriptionLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_ORDER", Storage="_Order", DbType="Int")]
		public System.Nullable<int> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_COUNT_M_POSTS", Storage="_UpdatePostCount", DbType="SmallInt")]
		public System.Nullable<bool> UpdatePostCount
		{
			get
			{
				return this._UpdatePostCount;
			}
			set
			{
				if ((this._UpdatePostCount != value))
				{
					this.OnUpdatePostCountChanging(value);
					this.SendPropertyChanging();
					this._UpdatePostCount = value;
					this.SendPropertyChanged("UpdatePostCount");
					this.OnUpdatePostCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_LAST_POST_TOPIC_ID", Storage="_LastTopicId", DbType="Int")]
		public System.Nullable<int> LastTopicId
		{
			get
			{
				return this._LastTopicId;
			}
			set
			{
				if ((this._LastTopicId != value))
				{
					this.OnLastTopicIdChanging(value);
					this.SendPropertyChanging();
					this._LastTopicId = value;
					this.SendPropertyChanged("LastTopicId");
					this.OnLastTopicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_LAST_POST_REPLY_ID", Storage="_LastreplyId", DbType="Int")]
		public System.Nullable<int> LastReplyId
		{
			get
			{
				return this._LastreplyId;
			}
			set
			{
				if ((this._LastreplyId != value))
				{
					this.OnLastReplyIdChanging(value);
					this.SendPropertyChanging();
					this._LastreplyId = value;
					this.SendPropertyChanged("LastReplyId");
					this.OnLastReplyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="F_POLLS", Storage="_AllowPolls", DbType="Int")]
		public bool AllowPolls
		{
			get
			{
				return this._AllowPolls;
			}
			set
			{
				if ((this._AllowPolls != value))
				{
					this.OnAllowPollsChanging(value);
					this.SendPropertyChanging();
					this._AllowPolls = value;
					this.SendPropertyChanged("AllowPolls");
					this.OnAllowPollsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_CATEGORY")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private short _Status;
		
		private string _Name;
		
		private System.Nullable<int> _ModerationLevel;
		
		private System.Nullable<int> _SubscriptionLevel;
		
		private System.Nullable<int> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCAT_STATUSChanging(short value);
    partial void OnCAT_STATUSChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModerationLevelChanging(System.Nullable<int> value);
    partial void OnModerationLevelChanged();
    partial void OnSubscriptionLevelChanging(System.Nullable<int> value);
    partial void OnSubscriptionLevelChanged();
    partial void OnOrderChanging(System.Nullable<int> value);
    partial void OnOrderChanged();
    #endregion
		
		public Category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CAT_ID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		internal short CAT_STATUS
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnCAT_STATUSChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("CAT_STATUS");
					this.OnCAT_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CAT_NAME", Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CAT_MODERATION", Storage="_ModerationLevel", DbType="Int")]
		public System.Nullable<int> ModerationLevel
		{
			get
			{
				return this._ModerationLevel;
			}
			set
			{
				if ((this._ModerationLevel != value))
				{
					this.OnModerationLevelChanging(value);
					this.SendPropertyChanging();
					this._ModerationLevel = value;
					this.SendPropertyChanged("ModerationLevel");
					this.OnModerationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CAT_SUBSCRIPTION", Storage="_SubscriptionLevel", DbType="Int")]
		public System.Nullable<int> SubscriptionLevel
		{
			get
			{
				return this._SubscriptionLevel;
			}
			set
			{
				if ((this._SubscriptionLevel != value))
				{
					this.OnSubscriptionLevelChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionLevel = value;
					this.SendPropertyChanged("SubscriptionLevel");
					this.OnSubscriptionLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CAT_ORDER", Storage="_Order", DbType="Int")]
		public System.Nullable<int> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_TOPICS")]
	public partial class Topic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CAT_ID;
		
		private int _FORUM_ID;
		
		private int _Id;
		
		private short _Status;
		
		private string _Subject;
		
		private string _Message;
		
		private System.Nullable<int> _T_AUTHOR;
		
		private int _ReplyCount;
		
		private System.Nullable<int> _ViewCount;
		
		private string _LastPostDate;
		
		private string _Date;
		
		private string _PostersIP;
		
		private System.Nullable<int> _AllowArchive;
		
		private System.Nullable<int> _T_LAST_POST_AUTHOR;
		
		private bool _IsSticky;
		
		private string _LastEditDate;
		
		private System.Nullable<int> _LastEditBy;
		
		private bool _UseSignature;
		
		private System.Nullable<int> _LastReplyId;
		
		private int _UnModeratedReplies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIdChanging(int value);
    partial void OnCatIdChanged();
    partial void OnForumIdChanging(int value);
    partial void OnForumIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnT_STATUSChanging(short value);
    partial void OnT_STATUSChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnT_AUTHORChanging(System.Nullable<int> value);
    partial void OnT_AUTHORChanged();
    partial void OnReplyCountChanging(int value);
    partial void OnReplyCountChanged();
    partial void OnViewCountChanging(System.Nullable<int> value);
    partial void OnViewCountChanged();
    partial void OnT_LAST_POSTChanging(string value);
    partial void OnT_LAST_POSTChanged();
    partial void OnT_DATEChanging(string value);
    partial void OnT_DATEChanged();
    partial void OnPostersIPChanging(string value);
    partial void OnPostersIPChanged();
    partial void OnAllowArchiveChanging(System.Nullable<int> value);
    partial void OnAllowArchiveChanged();
    partial void OnLastPostAuthorIdChanging(System.Nullable<int> value);
    partial void OnLastPostAuthorIdChanged();
    partial void OnIsStickyChanging(bool value);
    partial void OnIsStickyChanged();
    partial void OnT_LAST_EDITChanging(string value);
    partial void OnT_LAST_EDITChanged();
    partial void OnT_LAST_EDITBYChanging(System.Nullable<int> value);
    partial void OnT_LAST_EDITBYChanged();
    partial void OnUseSignaturesChanging(bool value);
    partial void OnUseSignaturesChanged();
    partial void OnLastReplyIdChanging(System.Nullable<int> value);
    partial void OnLastReplyIdChanged();
    partial void OnUnModeratedRepliesChanging(int value);
    partial void OnUnModeratedRepliesChanged();
    #endregion
		
		public Topic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CAT_ID", Storage="_CAT_ID", DbType="Int NOT NULL")]
		public int CatId
		{
			get
			{
				return this._CAT_ID;
			}
			set
			{
				if ((this._CAT_ID != value))
				{
					this.OnCatIdChanging(value);
					this.SendPropertyChanging();
					this._CAT_ID = value;
					this.SendPropertyChanged("CatId");
					this.OnCatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FORUM_ID", Storage="_FORUM_ID", DbType="Int NOT NULL")]
		public int ForumId
		{
			get
			{
				return this._FORUM_ID;
			}
			set
			{
				if ((this._FORUM_ID != value))
				{
					this.OnForumIdChanging(value);
					this.SendPropertyChanging();
					this._FORUM_ID = value;
					this.SendPropertyChanged("ForumId");
					this.OnForumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TOPIC_ID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		internal short T_STATUS
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnT_STATUSChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("T_STATUS");
					this.OnT_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="T_SUBJECT", Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="T_MESSAGE", Storage="_Message", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_AUTHOR", DbType="Int")]
		internal System.Nullable<int> T_AUTHOR
		{
			get
			{
				return this._T_AUTHOR;
			}
			set
			{
				if ((this._T_AUTHOR != value))
				{
					this.OnT_AUTHORChanging(value);
					this.SendPropertyChanging();
					this._T_AUTHOR = value;
					this.SendPropertyChanged("T_AUTHOR");
					this.OnT_AUTHORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="T_REPLIES", Storage="_ReplyCount", DbType="Int")]
		public int ReplyCount
		{
			get
			{
				return this._ReplyCount;
			}
			set
			{
				if ((this._ReplyCount != value))
				{
					this.OnReplyCountChanging(value);
					this.SendPropertyChanging();
					this._ReplyCount = value;
					this.SendPropertyChanged("ReplyCount");
					this.OnReplyCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="T_VIEW_COUNT", Storage="_ViewCount", DbType="Int")]
		public System.Nullable<int> ViewCount
		{
			get
			{
				return this._ViewCount;
			}
			set
			{
				if ((this._ViewCount != value))
				{
					this.OnViewCountChanging(value);
					this.SendPropertyChanging();
					this._ViewCount = value;
					this.SendPropertyChanged("ViewCount");
					this.OnViewCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPostDate", DbType="NVarChar(50)")]
		internal string T_LAST_POST
		{
			get
			{
				return this._LastPostDate;
			}
			set
			{
				if ((this._LastPostDate != value))
				{
					this.OnT_LAST_POSTChanging(value);
					this.SendPropertyChanging();
					this._LastPostDate = value;
					this.SendPropertyChanged("T_LAST_POST");
					this.OnT_LAST_POSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(50)")]
		internal string T_DATE
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnT_DATEChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("T_DATE");
					this.OnT_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="T_IP", Storage="_PostersIP", DbType="NVarChar(50)")]
		public string PostersIP
		{
			get
			{
				return this._PostersIP;
			}
			set
			{
				if ((this._PostersIP != value))
				{
					this.OnPostersIPChanging(value);
					this.SendPropertyChanging();
					this._PostersIP = value;
					this.SendPropertyChanged("PostersIP");
					this.OnPostersIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="T_ARCHIVE_FLAG", Storage="_AllowArchive", DbType="Int")]
		public System.Nullable<int> AllowArchive
		{
			get
			{
				return this._AllowArchive;
			}
			set
			{
				if ((this._AllowArchive != value))
				{
					this.OnAllowArchiveChanging(value);
					this.SendPropertyChanging();
					this._AllowArchive = value;
					this.SendPropertyChanged("AllowArchive");
					this.OnAllowArchiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="T_LAST_POST_AUTHOR", Storage="_T_LAST_POST_AUTHOR", DbType="Int")]
		public System.Nullable<int> LastPostAuthorId
		{
			get
			{
				return this._T_LAST_POST_AUTHOR;
			}
			set
			{
				if ((this._T_LAST_POST_AUTHOR != value))
				{
					this.OnLastPostAuthorIdChanging(value);
					this.SendPropertyChanging();
					this._T_LAST_POST_AUTHOR = value;
					this.SendPropertyChanged("LastPostAuthorId");
					this.OnLastPostAuthorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="T_STICKY", Storage="_IsSticky", DbType="SmallInt")]
		public bool IsSticky
		{
			get
			{
				return this._IsSticky;
			}
			set
			{
				if ((this._IsSticky != value))
				{
					this.OnIsStickyChanging(value);
					this.SendPropertyChanging();
					this._IsSticky = value;
					this.SendPropertyChanged("IsSticky");
					this.OnIsStickyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditDate", DbType="NVarChar(14)")]
		internal string T_LAST_EDIT
		{
			get
			{
				return this._LastEditDate;
			}
			set
			{
				if ((this._LastEditDate != value))
				{
					this.OnT_LAST_EDITChanging(value);
					this.SendPropertyChanging();
					this._LastEditDate = value;
					this.SendPropertyChanged("T_LAST_EDIT");
					this.OnT_LAST_EDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditBy", DbType="Int")]
		internal System.Nullable<int> T_LAST_EDITBY
		{
			get
			{
				return this._LastEditBy;
			}
			set
			{
				if ((this._LastEditBy != value))
				{
					this.OnT_LAST_EDITBYChanging(value);
					this.SendPropertyChanging();
					this._LastEditBy = value;
					this.SendPropertyChanged("T_LAST_EDITBY");
					this.OnT_LAST_EDITBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="T_SIG", Storage="_UseSignature", DbType="SmallInt")]
		public bool UseSignatures
		{
			get
			{
				return this._UseSignature;
			}
			set
			{
				if ((this._UseSignature != value))
				{
					this.OnUseSignaturesChanging(value);
					this.SendPropertyChanging();
					this._UseSignature = value;
					this.SendPropertyChanged("UseSignatures");
					this.OnUseSignaturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="T_LAST_POST_REPLY_ID", Storage="_LastReplyId", DbType="Int")]
		public System.Nullable<int> LastReplyId
		{
			get
			{
				return this._LastReplyId;
			}
			set
			{
				if ((this._LastReplyId != value))
				{
					this.OnLastReplyIdChanging(value);
					this.SendPropertyChanging();
					this._LastReplyId = value;
					this.SendPropertyChanged("LastReplyId");
					this.OnLastReplyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="T_UREPLIES", Storage="_UnModeratedReplies", DbType="Int")]
		public int UnModeratedReplies
		{
			get
			{
				return this._UnModeratedReplies;
			}
			set
			{
				if ((this._UnModeratedReplies != value))
				{
					this.OnUnModeratedRepliesChanging(value);
					this.SendPropertyChanging();
					this._UnModeratedReplies = value;
					this.SendPropertyChanged("UnModeratedReplies");
					this.OnUnModeratedRepliesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_REPLY")]
	public partial class Reply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CAT_ID;
		
		private int _FORUM_ID;
		
		private int _TOPIC_ID;
		
		private int _Id;
		
		private System.Nullable<int> _R_AUTHOR;
		
		private string _Message;
		
		private string _Date;
		
		private string _PostersIP;
		
		private short _Status;
		
		private string _LastEditDate;
		
		private System.Nullable<int> _LastEditBy;
		
		private bool _UseSignature;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIdChanging(int value);
    partial void OnCatIdChanged();
    partial void OnForumIdChanging(int value);
    partial void OnForumIdChanged();
    partial void OnTopicIdChanging(int value);
    partial void OnTopicIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnR_AUTHORChanging(System.Nullable<int> value);
    partial void OnR_AUTHORChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnR_DATEChanging(string value);
    partial void OnR_DATEChanged();
    partial void OnPostersIPChanging(string value);
    partial void OnPostersIPChanged();
    partial void OnR_STATUSChanging(short value);
    partial void OnR_STATUSChanged();
    partial void OnR_LAST_EDITChanging(string value);
    partial void OnR_LAST_EDITChanged();
    partial void OnR_LAST_EDITBYChanging(System.Nullable<int> value);
    partial void OnR_LAST_EDITBYChanged();
    partial void OnUseSignaturesChanging(bool value);
    partial void OnUseSignaturesChanged();
    #endregion
		
		public Reply()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CAT_ID", Storage="_CAT_ID", DbType="Int NOT NULL")]
		public int CatId
		{
			get
			{
				return this._CAT_ID;
			}
			set
			{
				if ((this._CAT_ID != value))
				{
					this.OnCatIdChanging(value);
					this.SendPropertyChanging();
					this._CAT_ID = value;
					this.SendPropertyChanged("CatId");
					this.OnCatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FORUM_ID", Storage="_FORUM_ID", DbType="Int NOT NULL")]
		public int ForumId
		{
			get
			{
				return this._FORUM_ID;
			}
			set
			{
				if ((this._FORUM_ID != value))
				{
					this.OnForumIdChanging(value);
					this.SendPropertyChanging();
					this._FORUM_ID = value;
					this.SendPropertyChanged("ForumId");
					this.OnForumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TOPIC_ID", Storage="_TOPIC_ID", DbType="Int NOT NULL")]
		public int TopicId
		{
			get
			{
				return this._TOPIC_ID;
			}
			set
			{
				if ((this._TOPIC_ID != value))
				{
					this.OnTopicIdChanging(value);
					this.SendPropertyChanging();
					this._TOPIC_ID = value;
					this.SendPropertyChanged("TopicId");
					this.OnTopicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="REPLY_ID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_AUTHOR", DbType="Int")]
		internal System.Nullable<int> R_AUTHOR
		{
			get
			{
				return this._R_AUTHOR;
			}
			set
			{
				if ((this._R_AUTHOR != value))
				{
					this.OnR_AUTHORChanging(value);
					this.SendPropertyChanging();
					this._R_AUTHOR = value;
					this.SendPropertyChanged("R_AUTHOR");
					this.OnR_AUTHORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="R_MESSAGE", Storage="_Message", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(50)")]
		internal string R_DATE
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnR_DATEChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("R_DATE");
					this.OnR_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="R_IP", Storage="_PostersIP", DbType="NVarChar(50)")]
		public string PostersIP
		{
			get
			{
				return this._PostersIP;
			}
			set
			{
				if ((this._PostersIP != value))
				{
					this.OnPostersIPChanging(value);
					this.SendPropertyChanging();
					this._PostersIP = value;
					this.SendPropertyChanged("PostersIP");
					this.OnPostersIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		internal short R_STATUS
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnR_STATUSChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("R_STATUS");
					this.OnR_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditDate", DbType="NVarChar(14)")]
		internal string R_LAST_EDIT
		{
			get
			{
				return this._LastEditDate;
			}
			set
			{
				if ((this._LastEditDate != value))
				{
					this.OnR_LAST_EDITChanging(value);
					this.SendPropertyChanging();
					this._LastEditDate = value;
					this.SendPropertyChanged("R_LAST_EDIT");
					this.OnR_LAST_EDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditBy", DbType="Int")]
		internal System.Nullable<int> R_LAST_EDITBY
		{
			get
			{
				return this._LastEditBy;
			}
			set
			{
				if ((this._LastEditBy != value))
				{
					this.OnR_LAST_EDITBYChanging(value);
					this.SendPropertyChanging();
					this._LastEditBy = value;
					this.SendPropertyChanged("R_LAST_EDITBY");
					this.OnR_LAST_EDITBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="R_SIG", Storage="_UseSignature", DbType="SmallInt")]
		public bool UseSignatures
		{
			get
			{
				return this._UseSignature;
			}
			set
			{
				if ((this._UseSignature != value))
				{
					this.OnUseSignaturesChanging(value);
					this.SendPropertyChanging();
					this._UseSignature = value;
					this.SendPropertyChanged("UseSignatures");
					this.OnUseSignaturesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_SUBSCRIPTIONS")]
	public partial class Subscriptions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubId;
		
		private int _MemberId;
		
		private int _CategoryId;
		
		private int _ForumId;
		
		private int _TopicId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubIdChanging(int value);
    partial void OnSubIdChanged();
    partial void OnMemberIdChanging(int value);
    partial void OnMemberIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnForumIdChanging(int value);
    partial void OnForumIdChanged();
    partial void OnTopicIdChanging(int value);
    partial void OnTopicIdChanged();
    #endregion
		
		public Subscriptions()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SUBSCRIPTION_ID", Storage="_SubId", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubId
		{
			get
			{
				return this._SubId;
			}
			set
			{
				if ((this._SubId != value))
				{
					this.OnSubIdChanging(value);
					this.SendPropertyChanging();
					this._SubId = value;
					this.SendPropertyChanged("SubId");
					this.OnSubIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MEMBER_ID", Storage="_MemberId", DbType="Int NOT NULL")]
		public int MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CAT_ID", Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FORUM_ID", Storage="_ForumId", DbType="Int NOT NULL")]
		public int ForumId
		{
			get
			{
				return this._ForumId;
			}
			set
			{
				if ((this._ForumId != value))
				{
					this.OnForumIdChanging(value);
					this.SendPropertyChanging();
					this._ForumId = value;
					this.SendPropertyChanged("ForumId");
					this.OnForumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TOPIC_ID", Storage="_TopicId", DbType="Int NOT NULL")]
		public int TopicId
		{
			get
			{
				return this._TopicId;
			}
			set
			{
				if ((this._TopicId != value))
				{
					this.OnTopicIdChanging(value);
					this.SendPropertyChanging();
					this._TopicId = value;
					this.SendPropertyChanged("TopicId");
					this.OnTopicIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_BADWORDS")]
	public partial class WordFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _BadWord;
		
		private string _Replace;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBadWordChanging(string value);
    partial void OnBadWordChanged();
    partial void OnReplaceChanging(string value);
    partial void OnReplaceChanged();
    #endregion
		
		public WordFilter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="B_ID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="B_BADWORD", Storage="_BadWord", DbType="NVarChar(50)")]
		public string BadWord
		{
			get
			{
				return this._BadWord;
			}
			set
			{
				if ((this._BadWord != value))
				{
					this.OnBadWordChanging(value);
					this.SendPropertyChanging();
					this._BadWord = value;
					this.SendPropertyChanged("BadWord");
					this.OnBadWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="B_REPLACE", Storage="_Replace", DbType="NVarChar(50)")]
		public string Replace
		{
			get
			{
				return this._Replace;
			}
			set
			{
				if ((this._Replace != value))
				{
					this.OnReplaceChanging(value);
					this.SendPropertyChanging();
					this._Replace = value;
					this.SendPropertyChanged("Replace");
					this.OnReplaceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_NAMEFILTER")]
	public partial class NameFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public NameFilter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="N_ID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="N_NAME", Storage="_Name", DbType="NVarChar(75)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_ROLES")]
	public partial class ForumRoles
	{
		
		private int _Id;
		
		private int _Forum_id;
		
		private int _Role_Id;
		
		public ForumRoles()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forum_id", DbType="Int NOT NULL")]
		public int Forum_id
		{
			get
			{
				return this._Forum_id;
			}
			set
			{
				if ((this._Forum_id != value))
				{
					this._Forum_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Id", DbType="Int NOT NULL")]
		public int Role_Id
		{
			get
			{
				return this._Role_Id;
			}
			set
			{
				if ((this._Role_Id != value))
				{
					this._Role_Id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_MEMBERS")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MEMBER_ID;
		
		private System.Nullable<short> _M_STATUS;
		
		private string _Name;
		
		private string _M_USERNAME;
		
		private string _M_PASSWORD;
		
		private string _M_EMAIL;
		
		private string _Country;
		
		private string _M_HOMEPAGE;
		
		private string _Signature;
		
		private System.Nullable<int> _M_DEFAULT_VIEW;
		
		private System.Nullable<short> _M_LEVEL;
		
		private string _M_AIM;
		
		private string _M_YAHOO;
		
		private string _M_ICQ;
		
		private System.Nullable<int> _M_POSTS;
		
		private string _Date;
		
		private string _M_LASTHEREDATE;
		
		private string _M_LASTPOSTDATE;
		
		private string _M_TITLE;
		
		private System.Nullable<short> _M_SUBSCRIPTION;
		
		private System.Nullable<short> _M_HIDE_EMAIL;
		
		private short _ReceiveEmail;
		
		private string _M_LAST_IP;
		
		private string _M_IP;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Occupation;
		
		private string _Sex;
		
		private string _Age;
		
		private string _Hobbies;
		
		private string _LatestNews;
		
		private string _Quote;
		
		private string _Biography;
		
		private string _MaritalStatus;
		
		private string _M_LINK1;
		
		private string _M_LINK2;
		
		private string _City;
		
		private string _State;
		
		private string _M_PHOTO_URL;
		
		private string _M_KEY;
		
		private string _M_NEWEMAIL;
		
		private string _M_MSN;
		
		private System.Nullable<short> _ViewSig;
		
		private string _DateOfBirth;
		
		private System.Nullable<short> _UseSig;
		
		private short _M_VOTED;
		
		private string _LastUpdated;
		
		private string _M_AVATAR;
		
		private string _Theme;
		
		private int _TimeOffset;
		
		private short _Validated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIsActiveChanging(System.Nullable<short> value);
    partial void OnIsActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnM_USERNAMEChanging(string value);
    partial void OnM_USERNAMEChanged();
    partial void OnM_PASSWORDChanging(string value);
    partial void OnM_PASSWORDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnHomePageChanging(string value);
    partial void OnHomePageChanged();
    partial void OnM_SIGChanging(string value);
    partial void OnM_SIGChanged();
    partial void OnM_DEFAULT_VIEWChanging(System.Nullable<int> value);
    partial void OnM_DEFAULT_VIEWChanged();
    partial void OnM_LEVELChanging(System.Nullable<short> value);
    partial void OnM_LEVELChanged();
    partial void OnAimChanging(string value);
    partial void OnAimChanged();
    partial void OnYahooChanging(string value);
    partial void OnYahooChanged();
    partial void OnICQChanging(string value);
    partial void OnICQChanged();
    partial void OnM_POSTSChanging(System.Nullable<int> value);
    partial void OnM_POSTSChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnM_LASTHEREDATEChanging(string value);
    partial void OnM_LASTHEREDATEChanged();
    partial void OnM_LASTPOSTDATEChanging(string value);
    partial void OnM_LASTPOSTDATEChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnM_SUBSCRIPTIONChanging(System.Nullable<short> value);
    partial void OnM_SUBSCRIPTIONChanged();
    partial void OnHideEmailChanging(System.Nullable<short> value);
    partial void OnHideEmailChanged();
    partial void OnReceiveEmailChanging(short value);
    partial void OnReceiveEmailChanged();
    partial void OnM_LAST_IPChanging(string value);
    partial void OnM_LAST_IPChanged();
    partial void OnM_IPChanging(string value);
    partial void OnM_IPChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnAgeChanging(string value);
    partial void OnAgeChanged();
    partial void OnHobbiesChanging(string value);
    partial void OnHobbiesChanged();
    partial void OnLatestNewsChanging(string value);
    partial void OnLatestNewsChanged();
    partial void OnQuoteChanging(string value);
    partial void OnQuoteChanged();
    partial void OnBiographyChanging(string value);
    partial void OnBiographyChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnM_LINK1Changing(string value);
    partial void OnM_LINK1Changed();
    partial void OnM_LINK2Changing(string value);
    partial void OnM_LINK2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnM_PHOTO_URLChanging(string value);
    partial void OnM_PHOTO_URLChanged();
    partial void OnM_KEYChanging(string value);
    partial void OnM_KEYChanged();
    partial void OnM_NEWEMAILChanging(string value);
    partial void OnM_NEWEMAILChanged();
    partial void OnMSNChanging(string value);
    partial void OnMSNChanged();
    partial void OnViewSigChanging(System.Nullable<short> value);
    partial void OnViewSigChanged();
    partial void OnDateOfBirthChanging(string value);
    partial void OnDateOfBirthChanged();
    partial void OnUseSigChanging(System.Nullable<short> value);
    partial void OnUseSigChanged();
    partial void OnM_VOTEDChanging(short value);
    partial void OnM_VOTEDChanged();
    partial void OnM_LASTUPDATEDChanging(string value);
    partial void OnM_LASTUPDATEDChanged();
    partial void OnM_AVATARChanging(string value);
    partial void OnM_AVATARChanged();
    partial void OnThemeChanging(string value);
    partial void OnThemeChanged();
    partial void OnTimeOffsetChanging(int value);
    partial void OnTimeOffsetChanged();
    partial void OnValidatedChanging(short value);
    partial void OnValidatedChanged();
    #endregion
		
		public Member()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MEMBER_ID", Storage="_MEMBER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._MEMBER_ID;
			}
			set
			{
				if ((this._MEMBER_ID != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._MEMBER_ID = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_STATUS", Storage="_M_STATUS", DbType="SmallInt")]
		public System.Nullable<short> IsActive
		{
			get
			{
				return this._M_STATUS;
			}
			set
			{
				if ((this._M_STATUS != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._M_STATUS = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_NAME", Storage="_Name", DbType="NVarChar(75)", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_USERNAME", DbType="NVarChar(150)")]
		public string M_USERNAME
		{
			get
			{
				return this._M_USERNAME;
			}
			set
			{
				if ((this._M_USERNAME != value))
				{
					this.OnM_USERNAMEChanging(value);
					this.SendPropertyChanging();
					this._M_USERNAME = value;
					this.SendPropertyChanged("M_USERNAME");
					this.OnM_USERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_PASSWORD", DbType="NVarChar(65)", CanBeNull=false)]
		public string M_PASSWORD
		{
			get
			{
				return this._M_PASSWORD;
			}
			set
			{
				if ((this._M_PASSWORD != value))
				{
					this.OnM_PASSWORDChanging(value);
					this.SendPropertyChanging();
					this._M_PASSWORD = value;
					this.SendPropertyChanged("M_PASSWORD");
					this.OnM_PASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_EMAIL", Storage="_M_EMAIL", DbType="NVarChar(800)", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._M_EMAIL;
			}
			set
			{
				if ((this._M_EMAIL != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._M_EMAIL = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_COUNTRY", Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_HOMEPAGE", Storage="_M_HOMEPAGE", DbType="NVarChar(255)")]
		public string HomePage
		{
			get
			{
				return this._M_HOMEPAGE;
			}
			set
			{
				if ((this._M_HOMEPAGE != value))
				{
					this.OnHomePageChanging(value);
					this.SendPropertyChanging();
					this._M_HOMEPAGE = value;
					this.SendPropertyChanged("HomePage");
					this.OnHomePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		internal string M_SIG
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnM_SIGChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("M_SIG");
					this.OnM_SIGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_DEFAULT_VIEW", DbType="Int")]
		public System.Nullable<int> M_DEFAULT_VIEW
		{
			get
			{
				return this._M_DEFAULT_VIEW;
			}
			set
			{
				if ((this._M_DEFAULT_VIEW != value))
				{
					this.OnM_DEFAULT_VIEWChanging(value);
					this.SendPropertyChanging();
					this._M_DEFAULT_VIEW = value;
					this.SendPropertyChanged("M_DEFAULT_VIEW");
					this.OnM_DEFAULT_VIEWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_LEVEL", DbType="SmallInt")]
		public System.Nullable<short> M_LEVEL
		{
			get
			{
				return this._M_LEVEL;
			}
			set
			{
				if ((this._M_LEVEL != value))
				{
					this.OnM_LEVELChanging(value);
					this.SendPropertyChanging();
					this._M_LEVEL = value;
					this.SendPropertyChanged("M_LEVEL");
					this.OnM_LEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_AIM", Storage="_M_AIM", DbType="NVarChar(150)")]
		public string Aim
		{
			get
			{
				return this._M_AIM;
			}
			set
			{
				if ((this._M_AIM != value))
				{
					this.OnAimChanging(value);
					this.SendPropertyChanging();
					this._M_AIM = value;
					this.SendPropertyChanged("Aim");
					this.OnAimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_YAHOO", Storage="_M_YAHOO", DbType="NVarChar(150)")]
		public string Yahoo
		{
			get
			{
				return this._M_YAHOO;
			}
			set
			{
				if ((this._M_YAHOO != value))
				{
					this.OnYahooChanging(value);
					this.SendPropertyChanging();
					this._M_YAHOO = value;
					this.SendPropertyChanged("Yahoo");
					this.OnYahooChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_ICQ", Storage="_M_ICQ", DbType="NVarChar(150)")]
		public string ICQ
		{
			get
			{
				return this._M_ICQ;
			}
			set
			{
				if ((this._M_ICQ != value))
				{
					this.OnICQChanging(value);
					this.SendPropertyChanging();
					this._M_ICQ = value;
					this.SendPropertyChanged("ICQ");
					this.OnICQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_POSTS", DbType="Int")]
		public System.Nullable<int> M_POSTS
		{
			get
			{
				return this._M_POSTS;
			}
			set
			{
				if ((this._M_POSTS != value))
				{
					this.OnM_POSTSChanging(value);
					this.SendPropertyChanging();
					this._M_POSTS = value;
					this.SendPropertyChanged("M_POSTS");
					this.OnM_POSTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_DATE", Storage="_Date", DbType="NVarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_LASTHEREDATE", DbType="NVarChar(50)")]
		public string M_LASTHEREDATE
		{
			get
			{
				return this._M_LASTHEREDATE;
			}
			set
			{
				if ((this._M_LASTHEREDATE != value))
				{
					this.OnM_LASTHEREDATEChanging(value);
					this.SendPropertyChanging();
					this._M_LASTHEREDATE = value;
					this.SendPropertyChanged("M_LASTHEREDATE");
					this.OnM_LASTHEREDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_LASTPOSTDATE", DbType="NVarChar(50)")]
		public string M_LASTPOSTDATE
		{
			get
			{
				return this._M_LASTPOSTDATE;
			}
			set
			{
				if ((this._M_LASTPOSTDATE != value))
				{
					this.OnM_LASTPOSTDATEChanging(value);
					this.SendPropertyChanging();
					this._M_LASTPOSTDATE = value;
					this.SendPropertyChanged("M_LASTPOSTDATE");
					this.OnM_LASTPOSTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_TITLE", Storage="_M_TITLE", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._M_TITLE;
			}
			set
			{
				if ((this._M_TITLE != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._M_TITLE = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_SUBSCRIPTION", DbType="SmallInt")]
		public System.Nullable<short> M_SUBSCRIPTION
		{
			get
			{
				return this._M_SUBSCRIPTION;
			}
			set
			{
				if ((this._M_SUBSCRIPTION != value))
				{
					this.OnM_SUBSCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._M_SUBSCRIPTION = value;
					this.SendPropertyChanged("M_SUBSCRIPTION");
					this.OnM_SUBSCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_HIDE_EMAIL", Storage="_M_HIDE_EMAIL", DbType="SmallInt")]
		public System.Nullable<short> HideEmail
		{
			get
			{
				return this._M_HIDE_EMAIL;
			}
			set
			{
				if ((this._M_HIDE_EMAIL != value))
				{
					this.OnHideEmailChanging(value);
					this.SendPropertyChanging();
					this._M_HIDE_EMAIL = value;
					this.SendPropertyChanged("HideEmail");
					this.OnHideEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_RECEIVE_EMAIL", Storage="_ReceiveEmail", DbType="SmallInt")]
		public short ReceiveEmail
		{
			get
			{
				return this._ReceiveEmail;
			}
			set
			{
				if ((this._ReceiveEmail != value))
				{
					this.OnReceiveEmailChanging(value);
					this.SendPropertyChanging();
					this._ReceiveEmail = value;
					this.SendPropertyChanged("ReceiveEmail");
					this.OnReceiveEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_LAST_IP", DbType="NVarChar(50)")]
		public string M_LAST_IP
		{
			get
			{
				return this._M_LAST_IP;
			}
			set
			{
				if ((this._M_LAST_IP != value))
				{
					this.OnM_LAST_IPChanging(value);
					this.SendPropertyChanging();
					this._M_LAST_IP = value;
					this.SendPropertyChanged("M_LAST_IP");
					this.OnM_LAST_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_IP", DbType="NVarChar(50)")]
		public string M_IP
		{
			get
			{
				return this._M_IP;
			}
			set
			{
				if ((this._M_IP != value))
				{
					this.OnM_IPChanging(value);
					this.SendPropertyChanging();
					this._M_IP = value;
					this.SendPropertyChanged("M_IP");
					this.OnM_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_FIRSTNAME", Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_LASTNAME", Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_OCCUPATION", Storage="_Occupation", DbType="NVarChar(255)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_SEX", Storage="_Sex", DbType="NVarChar(50)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_AGE", Storage="_Age", DbType="NVarChar(10)")]
		public string Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_HOBBIES", Storage="_Hobbies", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Hobbies
		{
			get
			{
				return this._Hobbies;
			}
			set
			{
				if ((this._Hobbies != value))
				{
					this.OnHobbiesChanging(value);
					this.SendPropertyChanging();
					this._Hobbies = value;
					this.SendPropertyChanged("Hobbies");
					this.OnHobbiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_LNEWS", Storage="_LatestNews", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string LatestNews
		{
			get
			{
				return this._LatestNews;
			}
			set
			{
				if ((this._LatestNews != value))
				{
					this.OnLatestNewsChanging(value);
					this.SendPropertyChanging();
					this._LatestNews = value;
					this.SendPropertyChanged("LatestNews");
					this.OnLatestNewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_QUOTE", Storage="_Quote", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Quote
		{
			get
			{
				return this._Quote;
			}
			set
			{
				if ((this._Quote != value))
				{
					this.OnQuoteChanging(value);
					this.SendPropertyChanging();
					this._Quote = value;
					this.SendPropertyChanged("Quote");
					this.OnQuoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_BIO", Storage="_Biography", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Biography
		{
			get
			{
				return this._Biography;
			}
			set
			{
				if ((this._Biography != value))
				{
					this.OnBiographyChanging(value);
					this.SendPropertyChanging();
					this._Biography = value;
					this.SendPropertyChanged("Biography");
					this.OnBiographyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_MARSTATUS", Storage="_MaritalStatus", DbType="NVarChar(100)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_LINK1", DbType="NVarChar(255)")]
		public string M_LINK1
		{
			get
			{
				return this._M_LINK1;
			}
			set
			{
				if ((this._M_LINK1 != value))
				{
					this.OnM_LINK1Changing(value);
					this.SendPropertyChanging();
					this._M_LINK1 = value;
					this.SendPropertyChanged("M_LINK1");
					this.OnM_LINK1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_LINK2", DbType="NVarChar(255)")]
		public string M_LINK2
		{
			get
			{
				return this._M_LINK2;
			}
			set
			{
				if ((this._M_LINK2 != value))
				{
					this.OnM_LINK2Changing(value);
					this.SendPropertyChanging();
					this._M_LINK2 = value;
					this.SendPropertyChanged("M_LINK2");
					this.OnM_LINK2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_CITY", Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_STATE", Storage="_State", DbType="NVarChar(100)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_PHOTO_URL", DbType="NVarChar(255)")]
		public string M_PHOTO_URL
		{
			get
			{
				return this._M_PHOTO_URL;
			}
			set
			{
				if ((this._M_PHOTO_URL != value))
				{
					this.OnM_PHOTO_URLChanging(value);
					this.SendPropertyChanging();
					this._M_PHOTO_URL = value;
					this.SendPropertyChanged("M_PHOTO_URL");
					this.OnM_PHOTO_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_KEY", DbType="NVarChar(32)")]
		public string M_KEY
		{
			get
			{
				return this._M_KEY;
			}
			set
			{
				if ((this._M_KEY != value))
				{
					this.OnM_KEYChanging(value);
					this.SendPropertyChanging();
					this._M_KEY = value;
					this.SendPropertyChanged("M_KEY");
					this.OnM_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_NEWEMAIL", DbType="NVarChar(50)")]
		public string M_NEWEMAIL
		{
			get
			{
				return this._M_NEWEMAIL;
			}
			set
			{
				if ((this._M_NEWEMAIL != value))
				{
					this.OnM_NEWEMAILChanging(value);
					this.SendPropertyChanging();
					this._M_NEWEMAIL = value;
					this.SendPropertyChanged("M_NEWEMAIL");
					this.OnM_NEWEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_MSN", Storage="_M_MSN", DbType="NVarChar(150)")]
		public string MSN
		{
			get
			{
				return this._M_MSN;
			}
			set
			{
				if ((this._M_MSN != value))
				{
					this.OnMSNChanging(value);
					this.SendPropertyChanging();
					this._M_MSN = value;
					this.SendPropertyChanged("MSN");
					this.OnMSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_VIEW_SIG", Storage="_ViewSig", DbType="SmallInt")]
		public System.Nullable<short> ViewSig
		{
			get
			{
				return this._ViewSig;
			}
			set
			{
				if ((this._ViewSig != value))
				{
					this.OnViewSigChanging(value);
					this.SendPropertyChanging();
					this._ViewSig = value;
					this.SendPropertyChanged("ViewSig");
					this.OnViewSigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_DOB", Storage="_DateOfBirth", DbType="NVarChar(8)")]
		public string DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_SIG_DEFAULT", Storage="_UseSig", DbType="SmallInt")]
		public System.Nullable<short> UseSig
		{
			get
			{
				return this._UseSig;
			}
			set
			{
				if ((this._UseSig != value))
				{
					this.OnUseSigChanging(value);
					this.SendPropertyChanging();
					this._UseSig = value;
					this.SendPropertyChanged("UseSig");
					this.OnUseSigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_VOTED", DbType="SmallInt")]
		public short M_VOTED
		{
			get
			{
				return this._M_VOTED;
			}
			set
			{
				if ((this._M_VOTED != value))
				{
					this.OnM_VOTEDChanging(value);
					this.SendPropertyChanging();
					this._M_VOTED = value;
					this.SendPropertyChanged("M_VOTED");
					this.OnM_VOTEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="NVarChar(50)")]
		internal string M_LASTUPDATED
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnM_LASTUPDATEDChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("M_LASTUPDATED");
					this.OnM_LASTUPDATEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_AVATAR", DbType="NVarChar(255)")]
		internal string M_AVATAR
		{
			get
			{
				return this._M_AVATAR;
			}
			set
			{
				if ((this._M_AVATAR != value))
				{
					this.OnM_AVATARChanging(value);
					this.SendPropertyChanging();
					this._M_AVATAR = value;
					this.SendPropertyChanged("M_AVATAR");
					this.OnM_AVATARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_THEME", Storage="_Theme", DbType="NVarChar(50)")]
		public string Theme
		{
			get
			{
				return this._Theme;
			}
			set
			{
				if ((this._Theme != value))
				{
					this.OnThemeChanging(value);
					this.SendPropertyChanging();
					this._Theme = value;
					this.SendPropertyChanged("Theme");
					this.OnThemeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_TIMEOFFSET", Storage="_TimeOffset", DbType="Int")]
		public int TimeOffset
		{
			get
			{
				return this._TimeOffset;
			}
			set
			{
				if ((this._TimeOffset != value))
				{
					this.OnTimeOffsetChanging(value);
					this.SendPropertyChanging();
					this._TimeOffset = value;
					this.SendPropertyChanged("TimeOffset");
					this.OnTimeOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_VALID", Storage="_Validated", DbType="SmallInt NOT NULL")]
		public short Validated
		{
			get
			{
				return this._Validated;
			}
			set
			{
				if ((this._Validated != value))
				{
					this.OnValidatedChanging(value);
					this.SendPropertyChanging();
					this._Validated = value;
					this.SendPropertyChanged("Validated");
					this.OnValidatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
