#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrivateMessaging.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ForumTest")]
	public partial class PMDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPrivateMessage(PrivateMessage instance);
    partial void UpdatePrivateMessage(PrivateMessage instance);
    partial void DeletePrivateMessage(PrivateMessage instance);
    partial void InsertProfileData(ProfileData instance);
    partial void UpdateProfileData(ProfileData instance);
    partial void DeleteProfileData(ProfileData instance);
    partial void InsertFromMember(FromMember instance);
    partial void UpdateFromMember(FromMember instance);
    partial void DeleteFromMember(FromMember instance);
    partial void InsertToMember(ToMember instance);
    partial void UpdateToMember(ToMember instance);
    partial void DeleteToMember(ToMember instance);
    partial void InsertMemberSearch(MemberSearch instance);
    partial void UpdateMemberSearch(MemberSearch instance);
    partial void DeleteMemberSearch(MemberSearch instance);
    #endregion
		
		public PMDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PMDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PMDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PMDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PrivateMessage> PrivateMessages
		{
			get
			{
				return this.GetTable<PrivateMessage>();
			}
		}
		
		public System.Data.Linq.Table<ProfileData> ProfileDatas
		{
			get
			{
				return this.GetTable<ProfileData>();
			}
		}
		
		public System.Data.Linq.Table<FromMember> FromMembers
		{
			get
			{
				return this.GetTable<FromMember>();
			}
		}
		
		public System.Data.Linq.Table<ToMember> ToMembers
		{
			get
			{
				return this.GetTable<ToMember>();
			}
		}
		
		public System.Data.Linq.Table<MemberSearch> MemberSearch
		{
			get
			{
				return this.GetTable<MemberSearch>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_PM")]
	public partial class PrivateMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _M_ID;
		
		private string _Subject;
		
		private int _FromMemberId;
		
		private int _ToMemberId;
		
		private string _SentDate;
		
		private string _Message;
		
		private string _Count;
		
		private int _Read;
		
		private string _Mail;
		
		private int _OutBox;
		
		private EntityRef<FromMember> _FromMembers;
		
		private EntityRef<ToMember> _ToMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnFromMemberIdChanging(int value);
    partial void OnFromMemberIdChanged();
    partial void OnToMemberIdChanging(int value);
    partial void OnToMemberIdChanged();
    partial void OnSentDateChanging(string value);
    partial void OnSentDateChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCountChanging(string value);
    partial void OnCountChanged();
    partial void OnReadChanging(int value);
    partial void OnReadChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnOutBoxChanging(int value);
    partial void OnOutBoxChanged();
    #endregion
		
		public PrivateMessage()
		{
			this._FromMembers = default(EntityRef<FromMember>);
			this._ToMembers = default(EntityRef<ToMember>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_ID", Storage="_M_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._M_ID;
			}
			set
			{
				if ((this._M_ID != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._M_ID = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_SUBJECT", Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_FROM", Storage="_FromMemberId", DbType="Int NOT NULL")]
		public int FromMemberId
		{
			get
			{
				return this._FromMemberId;
			}
			set
			{
				if ((this._FromMemberId != value))
				{
					this.OnFromMemberIdChanging(value);
					this.SendPropertyChanging();
					this._FromMemberId = value;
					this.SendPropertyChanged("FromMemberId");
					this.OnFromMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_TO", Storage="_ToMemberId", DbType="Int NOT NULL")]
		public int ToMemberId
		{
			get
			{
				return this._ToMemberId;
			}
			set
			{
				if ((this._ToMemberId != value))
				{
					this.OnToMemberIdChanging(value);
					this.SendPropertyChanging();
					this._ToMemberId = value;
					this.SendPropertyChanged("ToMemberId");
					this.OnToMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_SENT", Storage="_SentDate", DbType="NVarChar(50)")]
		public string SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this.OnSentDateChanging(value);
					this.SendPropertyChanging();
					this._SentDate = value;
					this.SendPropertyChanged("SentDate");
					this.OnSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_MESSAGE", Storage="_Message", DbType="NVarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_PMCOUNT", Storage="_Count", DbType="NVarChar(50)")]
		public string Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_READ", Storage="_Read", DbType="Int NOT NULL")]
		public int Read
		{
			get
			{
				return this._Read;
			}
			set
			{
				if ((this._Read != value))
				{
					this.OnReadChanging(value);
					this.SendPropertyChanging();
					this._Read = value;
					this.SendPropertyChanged("Read");
					this.OnReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_MAIL", Storage="_Mail", DbType="NVarChar(50)")]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_OUTBOX", Storage="_OutBox", DbType="Int NOT NULL")]
		public int OutBox
		{
			get
			{
				return this._OutBox;
			}
			set
			{
				if ((this._OutBox != value))
				{
					this.OnOutBoxChanging(value);
					this.SendPropertyChanging();
					this._OutBox = value;
					this.SendPropertyChanged("OutBox");
					this.OnOutBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivateMessage_FromMember", Storage="_FromMembers", ThisKey="FromMemberId", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public FromMember FromMembers
		{
			get
			{
				return this._FromMembers.Entity;
			}
			set
			{
				FromMember previousValue = this._FromMembers.Entity;
				if (((previousValue != value) 
							|| (this._FromMembers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FromMembers.Entity = null;
						previousValue.PrivateMessage = null;
					}
					this._FromMembers.Entity = value;
					if ((value != null))
					{
						value.PrivateMessage = this;
					}
					this.SendPropertyChanged("FromMembers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivateMessage_ToMember", Storage="_ToMembers", ThisKey="ToMemberId", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public ToMember ToMembers
		{
			get
			{
				return this._ToMembers.Entity;
			}
			set
			{
				ToMember previousValue = this._ToMembers.Entity;
				if (((previousValue != value) 
							|| (this._ToMembers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ToMembers.Entity = null;
						previousValue.PrivateMessage = null;
					}
					this._ToMembers.Entity = value;
					if ((value != null))
					{
						value.PrivateMessage = this;
					}
					this.SendPropertyChanged("ToMembers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class ProfileData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _Skype;
		
		private short _HideAge;
		
		private string _LinkTarget;
		
		private string _FavLinks;
		
		private short _Gravatar;
		
		private string _BookMarks;
		
		private short _PublicGallery;
		
		private short _PMEmail;
		
		private System.Nullable<short> _PMReceive;
		
		private string _PMLayout;
		
		private EntityRef<FromMember> _FromMember;
		
		private EntityRef<ToMember> _ToMember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnHideAgeChanging(short value);
    partial void OnHideAgeChanged();
    partial void OnLinkTargetChanging(string value);
    partial void OnLinkTargetChanged();
    partial void OnFavLinksChanging(string value);
    partial void OnFavLinksChanged();
    partial void OnGravatarChanging(short value);
    partial void OnGravatarChanged();
    partial void OnBookMarksChanging(string value);
    partial void OnBookMarksChanged();
    partial void OnPublicGalleryChanging(short value);
    partial void OnPublicGalleryChanged();
    partial void OnPMEmailChanging(short value);
    partial void OnPMEmailChanged();
    partial void OnPMReceiveChanging(System.Nullable<short> value);
    partial void OnPMReceiveChanged();
    partial void OnPMLayoutChanging(string value);
    partial void OnPMLayoutChanged();
    #endregion
		
		public ProfileData()
		{
			this._FromMember = default(EntityRef<FromMember>);
			this._ToMember = default(EntityRef<ToMember>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if ((this._FromMember.HasLoadedOrAssignedValue || this._ToMember.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="NVarChar(50)")]
		public string Skype
		{
			get
			{
				return this._Skype;
			}
			set
			{
				if ((this._Skype != value))
				{
					this.OnSkypeChanging(value);
					this.SendPropertyChanging();
					this._Skype = value;
					this.SendPropertyChanged("Skype");
					this.OnSkypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideAge", DbType="SmallInt NOT NULL")]
		public short HideAge
		{
			get
			{
				return this._HideAge;
			}
			set
			{
				if ((this._HideAge != value))
				{
					this.OnHideAgeChanging(value);
					this.SendPropertyChanging();
					this._HideAge = value;
					this.SendPropertyChanged("HideAge");
					this.OnHideAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTarget", DbType="NVarChar(20)")]
		public string LinkTarget
		{
			get
			{
				return this._LinkTarget;
			}
			set
			{
				if ((this._LinkTarget != value))
				{
					this.OnLinkTargetChanging(value);
					this.SendPropertyChanging();
					this._LinkTarget = value;
					this.SendPropertyChanged("LinkTarget");
					this.OnLinkTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavLinks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FavLinks
		{
			get
			{
				return this._FavLinks;
			}
			set
			{
				if ((this._FavLinks != value))
				{
					this.OnFavLinksChanging(value);
					this.SendPropertyChanging();
					this._FavLinks = value;
					this.SendPropertyChanged("FavLinks");
					this.OnFavLinksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gravatar", DbType="SmallInt NOT NULL")]
		public short Gravatar
		{
			get
			{
				return this._Gravatar;
			}
			set
			{
				if ((this._Gravatar != value))
				{
					this.OnGravatarChanging(value);
					this.SendPropertyChanging();
					this._Gravatar = value;
					this.SendPropertyChanged("Gravatar");
					this.OnGravatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookMarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string BookMarks
		{
			get
			{
				return this._BookMarks;
			}
			set
			{
				if ((this._BookMarks != value))
				{
					this.OnBookMarksChanging(value);
					this.SendPropertyChanging();
					this._BookMarks = value;
					this.SendPropertyChanged("BookMarks");
					this.OnBookMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicGallery", DbType="SmallInt NOT NULL")]
		public short PublicGallery
		{
			get
			{
				return this._PublicGallery;
			}
			set
			{
				if ((this._PublicGallery != value))
				{
					this.OnPublicGalleryChanging(value);
					this.SendPropertyChanging();
					this._PublicGallery = value;
					this.SendPropertyChanged("PublicGallery");
					this.OnPublicGalleryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMEmail", DbType="SmallInt NOT NULL")]
		public short PMEmail
		{
			get
			{
				return this._PMEmail;
			}
			set
			{
				if ((this._PMEmail != value))
				{
					this.OnPMEmailChanging(value);
					this.SendPropertyChanging();
					this._PMEmail = value;
					this.SendPropertyChanged("PMEmail");
					this.OnPMEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMReceive", DbType="SmallInt NOT NULL")]
		public System.Nullable<short> PMReceive
		{
			get
			{
				return this._PMReceive;
			}
			set
			{
				if ((this._PMReceive != value))
				{
					this.OnPMReceiveChanging(value);
					this.SendPropertyChanging();
					this._PMReceive = value;
					this.SendPropertyChanged("PMReceive");
					this.OnPMReceiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMLayout", DbType="NVarChar(10)")]
		public string PMLayout
		{
			get
			{
				return this._PMLayout;
			}
			set
			{
				if ((this._PMLayout != value))
				{
					this.OnPMLayoutChanging(value);
					this.SendPropertyChanging();
					this._PMLayout = value;
					this.SendPropertyChanged("PMLayout");
					this.OnPMLayoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FromMember_ProfileData", Storage="_FromMember", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public FromMember FromMember
		{
			get
			{
				return this._FromMember.Entity;
			}
			set
			{
				FromMember previousValue = this._FromMember.Entity;
				if (((previousValue != value) 
							|| (this._FromMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FromMember.Entity = null;
						previousValue.ProfileDatas = null;
					}
					this._FromMember.Entity = value;
					if ((value != null))
					{
						value.ProfileDatas = this;
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("FromMember");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ToMember_ProfileData", Storage="_ToMember", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public ToMember ToMember
		{
			get
			{
				return this._ToMember.Entity;
			}
			set
			{
				ToMember previousValue = this._ToMember.Entity;
				if (((previousValue != value) 
							|| (this._ToMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ToMember.Entity = null;
						previousValue.ProfileDatas = null;
					}
					this._ToMember.Entity = value;
					if ((value != null))
					{
						value.ProfileDatas = this;
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("ToMember");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_MEMBERS")]
	public partial class FromMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Email;
		
		private string _Country;
		
		private System.Nullable<int> _Posts;
		
		private string _Title;
		
		private string _Avatar;
		
		private EntityRef<ProfileData> _ProfileDatas;
		
		private EntityRef<PrivateMessage> _PrivateMessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostsChanging(System.Nullable<int> value);
    partial void OnPostsChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    #endregion
		
		public FromMember()
		{
			this._ProfileDatas = default(EntityRef<ProfileData>);
			this._PrivateMessage = default(EntityRef<PrivateMessage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MEMBER_ID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_NAME", Storage="_Name", DbType="NVarChar(75)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_EMAIL", Storage="_Email", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_COUNTRY", Storage="_Country", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_POSTS", Storage="_Posts", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				if ((this._Posts != value))
				{
					this.OnPostsChanging(value);
					this.SendPropertyChanging();
					this._Posts = value;
					this.SendPropertyChanged("Posts");
					this.OnPostsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_TITLE", Storage="_Title", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_AVATAR", Storage="_Avatar", DbType="NVarChar(255)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FromMember_ProfileData", Storage="_ProfileDatas", ThisKey="Id", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public ProfileData ProfileDatas
		{
			get
			{
				return this._ProfileDatas.Entity;
			}
			set
			{
				ProfileData previousValue = this._ProfileDatas.Entity;
				if (((previousValue != value) 
							|| (this._ProfileDatas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProfileDatas.Entity = null;
						previousValue.FromMember = null;
					}
					this._ProfileDatas.Entity = value;
					if ((value != null))
					{
						value.FromMember = this;
					}
					this.SendPropertyChanged("ProfileDatas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivateMessage_FromMember", Storage="_PrivateMessage", ThisKey="Id", OtherKey="FromMemberId", IsForeignKey=true)]
		public PrivateMessage PrivateMessage
		{
			get
			{
				return this._PrivateMessage.Entity;
			}
			set
			{
				PrivateMessage previousValue = this._PrivateMessage.Entity;
				if (((previousValue != value) 
							|| (this._PrivateMessage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrivateMessage.Entity = null;
						previousValue.FromMembers = null;
					}
					this._PrivateMessage.Entity = value;
					if ((value != null))
					{
						value.FromMembers = this;
						this._Id = value.FromMemberId;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("PrivateMessage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_MEMBERS")]
	public partial class ToMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Email;
		
		private string _Country;
		
		private System.Nullable<int> _Posts;
		
		private string _Title;
		
		private string _Avatar;
		
		private EntityRef<ProfileData> _ProfileDatas;
		
		private EntityRef<PrivateMessage> _PrivateMessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostsChanging(System.Nullable<int> value);
    partial void OnPostsChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    #endregion
		
		public ToMember()
		{
			this._ProfileDatas = default(EntityRef<ProfileData>);
			this._PrivateMessage = default(EntityRef<PrivateMessage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MEMBER_ID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_NAME", Storage="_Name", DbType="NVarChar(75)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_EMAIL", Storage="_Email", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_COUNTRY", Storage="_Country", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_POSTS", Storage="_Posts", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				if ((this._Posts != value))
				{
					this.OnPostsChanging(value);
					this.SendPropertyChanging();
					this._Posts = value;
					this.SendPropertyChanged("Posts");
					this.OnPostsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_TITLE", Storage="_Title", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_AVATAR", Storage="_Avatar", DbType="NVarChar(255)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ToMember_ProfileData", Storage="_ProfileDatas", ThisKey="Id", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public ProfileData ProfileDatas
		{
			get
			{
				return this._ProfileDatas.Entity;
			}
			set
			{
				ProfileData previousValue = this._ProfileDatas.Entity;
				if (((previousValue != value) 
							|| (this._ProfileDatas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProfileDatas.Entity = null;
						previousValue.ToMember = null;
					}
					this._ProfileDatas.Entity = value;
					if ((value != null))
					{
						value.ToMember = this;
					}
					this.SendPropertyChanged("ProfileDatas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivateMessage_ToMember", Storage="_PrivateMessage", ThisKey="Id", OtherKey="ToMemberId", IsForeignKey=true)]
		public PrivateMessage PrivateMessage
		{
			get
			{
				return this._PrivateMessage.Entity;
			}
			set
			{
				PrivateMessage previousValue = this._PrivateMessage.Entity;
				if (((previousValue != value) 
							|| (this._PrivateMessage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrivateMessage.Entity = null;
						previousValue.ToMembers = null;
					}
					this._PrivateMessage.Entity = value;
					if ((value != null))
					{
						value.ToMembers = this;
						this._Id = value.ToMemberId;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("PrivateMessage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_MEMBERS")]
	public partial class MemberSearch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<short> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    #endregion
		
		public MemberSearch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MEMBER_ID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_NAME", Storage="_Name", DbType="NVarChar(75)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_STATUS", Storage="_Status", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
