function emoticon(e, t, n) { this.name = e; this.code = t; this.image = n } function emtaginfo_t(e, t) { this.bbtag = e; this.etag = t } function emValidTag(e) { if (!e || !e.length) return false; var t = emoticons.filter(function (t) { return t.code == e }); if (t.length) return true; else return false } function emoticonToImage(e, t, n, r, i) { if (emValidTag(t)) { if (noparse) return "[" + t + "]"; if (opentags.length && opentags[opentags.length - 1].bbtag == "url" && urlstart >= 0) return "[" + t + "]"; var s = emoticons.filter(function (e) { return e.code == t }); if (s.length) { if (s[0].code == "noparse") { noparse = true; return "[noparse]" } var o = '<img alt="' + s[0].name + '" class="emoticon" src="/app_themes/' + this.pageTheme + "/images/emoticons/" + s[0].image + '"/>'; return o } } if (emValidTag(n)) { if (noparse) { if (n == "[/noparse]") { noparse = false; return n } return "[/" + m4 + "]" } } return e } function fillEmoticons() { emoticons.push(new emoticon("smile", ":)", "icon_smile.gif")); emoticons.push(new emoticon("eightball", "8", "icon_smile_8ball.gif")); emoticons.push(new emoticon("angry", ":(!", "icon_smile_angry.gif")); emoticons.push(new emoticon("approve", "^", "icon_smile_approve.gif")); emoticons.push(new emoticon("bigsmile", ":D", "icon_smile_big.gif")); emoticons.push(new emoticon("bigeyes", "88", "icon_smile_bigeyes.gif")); emoticons.push(new emoticon("blackeye", "B)", "icon_smile_blackeye.gif")); emoticons.push(new emoticon("blush", ":I", "icon_smile_blush.gif")); emoticons.push(new emoticon("boggled", ":~", "icon_smile_boggled.gif")); emoticons.push(new emoticon("clown", ":o)", "icon_smile_clown.gif")); emoticons.push(new emoticon("cool", "8D", "icon_smile_cool.gif")); emoticons.push(new emoticon("cyclops", "o)", "icon_smile_cyclops.gif")); emoticons.push(new emoticon("dead", "xx(", "icon_smile_dead.gif")); emoticons.push(new emoticon("deadgreen", "XX()", "icon_smile_dead_green.gif")); emoticons.push(new emoticon("dissapprove", "v", "icon_smile_dissapprove.gif")); emoticons.push(new emoticon("dissapprove2", "V", "icon_smile_dissapprove.gif")); emoticons.push(new emoticon("evil", "}:)", "icon_smile_evil.gif")); emoticons.push(new emoticon("kisses", ":x", "icon_smile_kisses.gif")); emoticons.push(new emoticon("kisses2", ":X", "icon_smile_kisses.gif")); emoticons.push(new emoticon("mean", ":/", "icon_smile_mean.gif")); emoticons.push(new emoticon("question", "?", "icon_smile_question.gif")); emoticons.push(new emoticon("sad", ":(", "icon_smile_sad.gif")); emoticons.push(new emoticon("shock", ":o", "icon_smile_shock.gif")); emoticons.push(new emoticon("shocked", ":0", "icon_smile_shock.gif")); emoticons.push(new emoticon("shy", "8)", "icon_smile_shy.gif")); emoticons.push(new emoticon("sleepy", "|)", "icon_smile_sleepy.gif")); emoticons.push(new emoticon("tongue", ":P", "icon_smile_tongue.gif")); emoticons.push(new emoticon("tongue2", ":p", "icon_smile_tongue.gif")); emoticons.push(new emoticon("wink", ";)", "icon_smile_wink.gif")); emoticons.push(new emoticon("", "noparse", "")); emoticons.push(new emoticon("", "[/noparse]", "")); emoticons.push(new emoticon("delete", "delete", "delete.gif")); emoticons.push(new emoticon("edit", "edit", "edit.gif")); emoticons.push(new emoticon("pencil", "pencil", "pencil.gif")); emoticons.push(new emoticon("lock", "lock", "lock.gif")) } function parseEmoticon(e, t) { var n, r, i; this.pageTheme = t; if (emoticons == null || emoticons.length) { emoticons = new Array(0); fillEmoticons() } if (opentags == null || opentags.length) opentags = new Array(0); n = e.replace(smilefmt_re, emoticonToImage); if (noparse) noparse = false; if (opentags.length) { r = new String; if (opentags[opentags.length - 1].bbtag == "url") { opentags.pop(); r += '">' + e.substr(urlstart, e.length - urlstart) + "</a>" } while (opentags.length) r += opentags.pop().etag } return r ? n + r : n } var emoticons; var emtagname_re = /^\/?(?:b|i|u|pre)$/; var smilefmt_re = /\/?(?:\[([a-z0-9?}/!~|\^\*:;\(\)]{1,16})\])|(\[\/noparse])/ig