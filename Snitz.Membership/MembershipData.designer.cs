#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SnitzMembership
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ForumT")]
	public partial class MembershipDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertMembersInRole(MembersInRole instance);
    partial void UpdateMembersInRole(MembersInRole instance);
    partial void DeleteMembersInRole(MembersInRole instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    partial void InsertMemberProfile(MemberProfile instance);
    partial void UpdateMemberProfile(MemberProfile instance);
    partial void DeleteMemberProfile(MemberProfile instance);
    partial void InsertForumRole(ForumRole instance);
    partial void UpdateForumRole(ForumRole instance);
    partial void DeleteForumRole(ForumRole instance);
    partial void InsertForumModerator(ForumModerator instance);
    partial void UpdateForumModerator(ForumModerator instance);
    partial void DeleteForumModerator(ForumModerator instance);
    #endregion
		
		public MembershipDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MembershipDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MembershipDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MembershipDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<MembersInRole> MembersInRoles
		{
			get
			{
				return this.GetTable<MembersInRole>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		public System.Data.Linq.Table<MemberProfile> MemberProfiles
		{
			get
			{
				return this.GetTable<MemberProfile>();
			}
		}
		
		public System.Data.Linq.Table<ForumRole> ForumRoles
		{
			get
			{
				return this.GetTable<ForumRole>();
			}
		}
		
		public System.Data.Linq.Table<ForumModerator> ForumModerators
		{
			get
			{
				return this.GetTable<ForumModerator>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="sys.sp_columns")]
		public ISingleResult<sp_columnsResult> GetColumns([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(384)")] string table_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(384)")] string table_owner, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string table_qualifier, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(384)")] string column_name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ODBCVer", DbType="Int")] System.Nullable<int> oDBCVer)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), table_name, table_owner, table_qualifier, column_name, oDBCVer);
			return ((ISingleResult<sp_columnsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="aspnet_Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private int _RoleId;
		
		private EntitySet<MembersInRole> _MembersInRoles;
		
		private EntityRef<ForumRole> _ForumRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public Role()
		{
			this._MembersInRoles = new EntitySet<MembersInRole>(new Action<MembersInRole>(this.attach_MembersInRoles), new Action<MembersInRole>(this.detach_MembersInRoles));
			this._ForumRole = default(EntityRef<ForumRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._ForumRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_MembersInRole", Storage="_MembersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<MembersInRole> MembersInRoles
		{
			get
			{
				return this._MembersInRoles;
			}
			set
			{
				this._MembersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumRole_Role", Storage="_ForumRole", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public ForumRole ForumRole
		{
			get
			{
				return this._ForumRole.Entity;
			}
			set
			{
				ForumRole previousValue = this._ForumRole.Entity;
				if (((previousValue != value) 
							|| (this._ForumRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumRole.Entity = null;
						previousValue.Roles = null;
					}
					this._ForumRole.Entity = value;
					if ((value != null))
					{
						value.Roles = this;
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("ForumRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MembersInRoles(MembersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_MembersInRoles(MembersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="aspnet_UsersInRoles")]
	public partial class MembersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _RoleId;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public MembersInRole()
		{
			this._Member = default(EntityRef<Member>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MembersInRole", Storage="_Member", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MembersInRoles.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MembersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_MembersInRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.MembersInRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.MembersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_MEMBERS")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _IsLockedOut;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private string _M_COUNTRY;
		
		private System.Nullable<short> _M_LEVEL;
		
		private int _M_POSTS;
		
		private string _CreatedDate;
		
		private string _LastLoginDate;
		
		private string _LastActivityDate;
		
		private string _Title;
		
		private string _M_LAST_IP;
		
		private string _M_IP;
		
		private string _PasswordAnswer;
		
		private string _NewEmail;
		
		private string _PasswordQuestion;
		
		private bool _IsApproved;
		
		private string _LastPostDate;
		
		private int _ReceiveEmails;
		
		private int _TimeOffset;
		
		private EntitySet<MembersInRole> _MembersInRoles;
		
		private EntityRef<MemberProfile> _MemberProfiles;
		
		private EntityRef<ForumModerator> _ForumModerator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnM_LEVELChanging(System.Nullable<short> value);
    partial void OnM_LEVELChanged();
    partial void OnPostsChanging(int value);
    partial void OnPostsChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    partial void OnLastLoginDateChanging(string value);
    partial void OnLastLoginDateChanged();
    partial void OnLastActivityDateChanging(string value);
    partial void OnLastActivityDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnM_LAST_IPChanging(string value);
    partial void OnM_LAST_IPChanged();
    partial void OnM_IPChanging(string value);
    partial void OnM_IPChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnNewEmailChanging(string value);
    partial void OnNewEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnLastPostDateChanging(string value);
    partial void OnLastPostDateChanged();
    partial void OnReceiveEmailsChanging(int value);
    partial void OnReceiveEmailsChanged();
    partial void OnTimeOffsetChanging(int value);
    partial void OnTimeOffsetChanged();
    #endregion
		
		public Member()
		{
			this._MembersInRoles = new EntitySet<MembersInRole>(new Action<MembersInRole>(this.attach_MembersInRoles), new Action<MembersInRole>(this.detach_MembersInRoles));
			this._MemberProfiles = default(EntityRef<MemberProfile>);
			this._ForumModerator = default(EntityRef<ForumModerator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MEMBER_ID", Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_STATUS", Storage="_IsLockedOut", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public int Status
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_NAME", Storage="_Username", DbType="NVarChar(75) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_PASSWORD", Storage="_Password", DbType="NVarChar(65) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_EMAIL", Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_COUNTRY", Storage="_M_COUNTRY", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Country
		{
			get
			{
				return this._M_COUNTRY;
			}
			set
			{
				if ((this._M_COUNTRY != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._M_COUNTRY = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_LEVEL", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> M_LEVEL
		{
			get
			{
				return this._M_LEVEL;
			}
			set
			{
				if ((this._M_LEVEL != value))
				{
					this.OnM_LEVELChanging(value);
					this.SendPropertyChanging();
					this._M_LEVEL = value;
					this.SendPropertyChanged("M_LEVEL");
					this.OnM_LEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_POSTS", Storage="_M_POSTS", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int Posts
		{
			get
			{
				return this._M_POSTS;
			}
			set
			{
				if ((this._M_POSTS != value))
				{
					this.OnPostsChanging(value);
					this.SendPropertyChanging();
					this._M_POSTS = value;
					this.SendPropertyChanged("Posts");
					this.OnPostsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_DATE", Storage="_CreatedDate", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_LASTHEREDATE", Storage="_LastLoginDate", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_LASTUPDATED", Storage="_LastActivityDate", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_TITLE", Storage="_Title", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_LAST_IP", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string M_LAST_IP
		{
			get
			{
				return this._M_LAST_IP;
			}
			set
			{
				if ((this._M_LAST_IP != value))
				{
					this.OnM_LAST_IPChanging(value);
					this.SendPropertyChanging();
					this._M_LAST_IP = value;
					this.SendPropertyChanged("M_LAST_IP");
					this.OnM_LAST_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_IP", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string M_IP
		{
			get
			{
				return this._M_IP;
			}
			set
			{
				if ((this._M_IP != value))
				{
					this.OnM_IPChanging(value);
					this.SendPropertyChanging();
					this._M_IP = value;
					this.SendPropertyChanged("M_IP");
					this.OnM_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_KEY", Storage="_PasswordAnswer", DbType="NVarChar(32)", UpdateCheck=UpdateCheck.Never)]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_NEWEMAIL", Storage="_NewEmail", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string NewEmail
		{
			get
			{
				return this._NewEmail;
			}
			set
			{
				if ((this._NewEmail != value))
				{
					this.OnNewEmailChanging(value);
					this.SendPropertyChanging();
					this._NewEmail = value;
					this.SendPropertyChanged("NewEmail");
					this.OnNewEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_PWKEY", Storage="_PasswordQuestion", DbType="NVarChar(32)", UpdateCheck=UpdateCheck.Never)]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_VALID", Storage="_IsApproved", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_LASTPOSTDATE", Storage="_LastPostDate", DbType="NVarChar(50)")]
		public string LastPostDate
		{
			get
			{
				return this._LastPostDate;
			}
			set
			{
				if ((this._LastPostDate != value))
				{
					this.OnLastPostDateChanging(value);
					this.SendPropertyChanging();
					this._LastPostDate = value;
					this.SendPropertyChanged("LastPostDate");
					this.OnLastPostDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_RECEIVE_EMAIL", Storage="_ReceiveEmails", DbType="SmallInt NOT NULL")]
		public int ReceiveEmails
		{
			get
			{
				return this._ReceiveEmails;
			}
			set
			{
				if ((this._ReceiveEmails != value))
				{
					this.OnReceiveEmailsChanging(value);
					this.SendPropertyChanging();
					this._ReceiveEmails = value;
					this.SendPropertyChanged("ReceiveEmails");
					this.OnReceiveEmailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="M_TIMEOFFSET", Storage="_TimeOffset", DbType="Int")]
		public int TimeOffset
		{
			get
			{
				return this._TimeOffset;
			}
			set
			{
				if ((this._TimeOffset != value))
				{
					this.OnTimeOffsetChanging(value);
					this.SendPropertyChanging();
					this._TimeOffset = value;
					this.SendPropertyChanged("TimeOffset");
					this.OnTimeOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MembersInRole", Storage="_MembersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<MembersInRole> MembersInRoles
		{
			get
			{
				return this._MembersInRoles;
			}
			set
			{
				this._MembersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberProfile", Storage="_MemberProfiles", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public MemberProfile MemberProfiles
		{
			get
			{
				return this._MemberProfiles.Entity;
			}
			set
			{
				MemberProfile previousValue = this._MemberProfiles.Entity;
				if (((previousValue != value) 
							|| (this._MemberProfiles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MemberProfiles.Entity = null;
						previousValue.Member = null;
					}
					this._MemberProfiles.Entity = value;
					if ((value != null))
					{
						value.Member = this;
					}
					this.SendPropertyChanged("MemberProfiles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumModerator_Member", Storage="_ForumModerator", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public ForumModerator ForumModerator
		{
			get
			{
				return this._ForumModerator.Entity;
			}
			set
			{
				ForumModerator previousValue = this._ForumModerator.Entity;
				if (((previousValue != value) 
							|| (this._ForumModerator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumModerator.Entity = null;
						previousValue.Members = null;
					}
					this._ForumModerator.Entity = value;
					if ((value != null))
					{
						value.Members = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("ForumModerator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MembersInRoles(MembersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_MembersInRoles(MembersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ProfileData")]
	public partial class MemberProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _Skype;
		
		private System.Nullable<short> _HideAge;
		
		private string _LinkTarget;
		
		private string _FavLinks;
		
		private System.Nullable<short> _Gravatar;
		
		private string _BookMarks;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnHideAgeChanging(System.Nullable<short> value);
    partial void OnHideAgeChanged();
    partial void OnLinkTargetChanging(string value);
    partial void OnLinkTargetChanged();
    partial void OnFavLinksChanging(string value);
    partial void OnFavLinksChanged();
    partial void OnGravatarChanging(System.Nullable<short> value);
    partial void OnGravatarChanged();
    partial void OnBookMarksChanging(string value);
    partial void OnBookMarksChanged();
    #endregion
		
		public MemberProfile()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserID", Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="NVarChar(50)")]
		public string Skype
		{
			get
			{
				return this._Skype;
			}
			set
			{
				if ((this._Skype != value))
				{
					this.OnSkypeChanging(value);
					this.SendPropertyChanging();
					this._Skype = value;
					this.SendPropertyChanged("Skype");
					this.OnSkypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideAge", DbType="SmallInt")]
		public System.Nullable<short> HideAge
		{
			get
			{
				return this._HideAge;
			}
			set
			{
				if ((this._HideAge != value))
				{
					this.OnHideAgeChanging(value);
					this.SendPropertyChanging();
					this._HideAge = value;
					this.SendPropertyChanged("HideAge");
					this.OnHideAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTarget", DbType="NVarChar(50)")]
		public string LinkTarget
		{
			get
			{
				return this._LinkTarget;
			}
			set
			{
				if ((this._LinkTarget != value))
				{
					this.OnLinkTargetChanging(value);
					this.SendPropertyChanging();
					this._LinkTarget = value;
					this.SendPropertyChanged("LinkTarget");
					this.OnLinkTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavLinks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FavLinks
		{
			get
			{
				return this._FavLinks;
			}
			set
			{
				if ((this._FavLinks != value))
				{
					this.OnFavLinksChanging(value);
					this.SendPropertyChanging();
					this._FavLinks = value;
					this.SendPropertyChanged("FavLinks");
					this.OnFavLinksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gravatar", DbType="SmallInt")]
		public System.Nullable<short> Gravatar
		{
			get
			{
				return this._Gravatar;
			}
			set
			{
				if ((this._Gravatar != value))
				{
					this.OnGravatarChanging(value);
					this.SendPropertyChanging();
					this._Gravatar = value;
					this.SendPropertyChanged("Gravatar");
					this.OnGravatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookMarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string BookMarks
		{
			get
			{
				return this._BookMarks;
			}
			set
			{
				if ((this._BookMarks != value))
				{
					this.OnBookMarksChanging(value);
					this.SendPropertyChanging();
					this._BookMarks = value;
					this.SendPropertyChanged("BookMarks");
					this.OnBookMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberProfile", Storage="_Member", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MemberProfiles = null;
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MemberProfiles = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_ROLES")]
	public partial class ForumRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ForumId;
		
		private int _RoleId;
		
		private EntityRef<Role> _Roles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnForumIdChanging(int value);
    partial void OnForumIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public ForumRole()
		{
			this._Roles = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Forum_id", Storage="_ForumId", DbType="Int NOT NULL")]
		public int ForumId
		{
			get
			{
				return this._ForumId;
			}
			set
			{
				if ((this._ForumId != value))
				{
					this.OnForumIdChanging(value);
					this.SendPropertyChanging();
					this._ForumId = value;
					this.SendPropertyChanged("ForumId");
					this.OnForumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Role_Id", Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumRole_Role", Storage="_Roles", ThisKey="RoleId", OtherKey="RoleId", IsUnique=true, IsForeignKey=false)]
		public Role Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Role previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.ForumRole = null;
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.ForumRole = this;
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FORUM_MODERATOR")]
	public partial class ForumModerator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ForumId;
		
		private int _UserId;
		
		private System.Nullable<short> _ModeratorType;
		
		private EntityRef<Member> _Members;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnForumIdChanging(System.Nullable<int> value);
    partial void OnForumIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnModeratorTypeChanging(System.Nullable<short> value);
    partial void OnModeratorTypeChanged();
    #endregion
		
		public ForumModerator()
		{
			this._Members = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MOD_ID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FORUM_ID", Storage="_ForumId", DbType="Int")]
		public System.Nullable<int> ForumId
		{
			get
			{
				return this._ForumId;
			}
			set
			{
				if ((this._ForumId != value))
				{
					this.OnForumIdChanging(value);
					this.SendPropertyChanging();
					this._ForumId = value;
					this.SendPropertyChanged("ForumId");
					this.OnForumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MEMBER_ID", Storage="_UserId", DbType="Int")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MOD_TYPE", Storage="_ModeratorType", DbType="SmallInt")]
		public System.Nullable<short> ModeratorType
		{
			get
			{
				return this._ModeratorType;
			}
			set
			{
				if ((this._ModeratorType != value))
				{
					this.OnModeratorTypeChanging(value);
					this.SendPropertyChanging();
					this._ModeratorType = value;
					this.SendPropertyChanged("ModeratorType");
					this.OnModeratorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumModerator_Member", Storage="_Members", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Member Members
		{
			get
			{
				return this._Members.Entity;
			}
			set
			{
				Member previousValue = this._Members.Entity;
				if (((previousValue != value) 
							|| (this._Members.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Members.Entity = null;
						previousValue.ForumModerator = null;
					}
					this._Members.Entity = value;
					if ((value != null))
					{
						value.ForumModerator = this;
					}
					this.SendPropertyChanged("Members");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sp_columnsResult
	{
		
		private string _TABLE_QUALIFIER;
		
		private string _TABLE_OWNER;
		
		private string _TABLE_NAME;
		
		private string _COLUMN_NAME;
		
		private System.Nullable<short> _DATA_TYPE;
		
		private string _TYPE_NAME;
		
		private System.Nullable<int> _PRECISION;
		
		private System.Nullable<int> _LENGTH;
		
		private System.Nullable<short> _SCALE;
		
		private System.Nullable<short> _RADIX;
		
		private System.Nullable<short> _NULLABLE;
		
		private string _REMARKS;
		
		private string _COLUMN_DEF;
		
		private System.Nullable<short> _SQL_DATA_TYPE;
		
		private System.Nullable<short> _SQL_DATETIME_SUB;
		
		private System.Nullable<int> _CHAR_OCTET_LENGTH;
		
		private System.Nullable<int> _ORDINAL_POSITION;
		
		private string _IS_NULLABLE;
		
		private System.Nullable<byte> _SS_DATA_TYPE;
		
		public sp_columnsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TABLE_QUALIFIER", DbType="NVarChar(128)")]
		public string TABLE_QUALIFIER
		{
			get
			{
				return this._TABLE_QUALIFIER;
			}
			set
			{
				if ((this._TABLE_QUALIFIER != value))
				{
					this._TABLE_QUALIFIER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TABLE_OWNER", DbType="NVarChar(128)")]
		public string TABLE_OWNER
		{
			get
			{
				return this._TABLE_OWNER;
			}
			set
			{
				if ((this._TABLE_OWNER != value))
				{
					this._TABLE_OWNER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TABLE_NAME", DbType="NVarChar(128)")]
		public string TABLE_NAME
		{
			get
			{
				return this._TABLE_NAME;
			}
			set
			{
				if ((this._TABLE_NAME != value))
				{
					this._TABLE_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLUMN_NAME", DbType="NVarChar(128)")]
		public string COLUMN_NAME
		{
			get
			{
				return this._COLUMN_NAME;
			}
			set
			{
				if ((this._COLUMN_NAME != value))
				{
					this._COLUMN_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_TYPE", DbType="SmallInt")]
		public System.Nullable<short> DATA_TYPE
		{
			get
			{
				return this._DATA_TYPE;
			}
			set
			{
				if ((this._DATA_TYPE != value))
				{
					this._DATA_TYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE_NAME", DbType="NVarChar(128)")]
		public string TYPE_NAME
		{
			get
			{
				return this._TYPE_NAME;
			}
			set
			{
				if ((this._TYPE_NAME != value))
				{
					this._TYPE_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRECISION", DbType="Int")]
		public System.Nullable<int> PRECISION
		{
			get
			{
				return this._PRECISION;
			}
			set
			{
				if ((this._PRECISION != value))
				{
					this._PRECISION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LENGTH", DbType="Int")]
		public System.Nullable<int> LENGTH
		{
			get
			{
				return this._LENGTH;
			}
			set
			{
				if ((this._LENGTH != value))
				{
					this._LENGTH = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCALE", DbType="SmallInt")]
		public System.Nullable<short> SCALE
		{
			get
			{
				return this._SCALE;
			}
			set
			{
				if ((this._SCALE != value))
				{
					this._SCALE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RADIX", DbType="SmallInt")]
		public System.Nullable<short> RADIX
		{
			get
			{
				return this._RADIX;
			}
			set
			{
				if ((this._RADIX != value))
				{
					this._RADIX = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NULLABLE", DbType="SmallInt")]
		public System.Nullable<short> NULLABLE
		{
			get
			{
				return this._NULLABLE;
			}
			set
			{
				if ((this._NULLABLE != value))
				{
					this._NULLABLE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REMARKS", DbType="VarChar(254)")]
		public string REMARKS
		{
			get
			{
				return this._REMARKS;
			}
			set
			{
				if ((this._REMARKS != value))
				{
					this._REMARKS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLUMN_DEF", DbType="NVarChar(4000)")]
		public string COLUMN_DEF
		{
			get
			{
				return this._COLUMN_DEF;
			}
			set
			{
				if ((this._COLUMN_DEF != value))
				{
					this._COLUMN_DEF = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SQL_DATA_TYPE", DbType="SmallInt")]
		public System.Nullable<short> SQL_DATA_TYPE
		{
			get
			{
				return this._SQL_DATA_TYPE;
			}
			set
			{
				if ((this._SQL_DATA_TYPE != value))
				{
					this._SQL_DATA_TYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SQL_DATETIME_SUB", DbType="SmallInt")]
		public System.Nullable<short> SQL_DATETIME_SUB
		{
			get
			{
				return this._SQL_DATETIME_SUB;
			}
			set
			{
				if ((this._SQL_DATETIME_SUB != value))
				{
					this._SQL_DATETIME_SUB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHAR_OCTET_LENGTH", DbType="Int")]
		public System.Nullable<int> CHAR_OCTET_LENGTH
		{
			get
			{
				return this._CHAR_OCTET_LENGTH;
			}
			set
			{
				if ((this._CHAR_OCTET_LENGTH != value))
				{
					this._CHAR_OCTET_LENGTH = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDINAL_POSITION", DbType="Int")]
		public System.Nullable<int> ORDINAL_POSITION
		{
			get
			{
				return this._ORDINAL_POSITION;
			}
			set
			{
				if ((this._ORDINAL_POSITION != value))
				{
					this._ORDINAL_POSITION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_NULLABLE", DbType="VarChar(254)")]
		public string IS_NULLABLE
		{
			get
			{
				return this._IS_NULLABLE;
			}
			set
			{
				if ((this._IS_NULLABLE != value))
				{
					this._IS_NULLABLE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SS_DATA_TYPE", DbType="TinyInt")]
		public System.Nullable<byte> SS_DATA_TYPE
		{
			get
			{
				return this._SS_DATA_TYPE;
			}
			set
			{
				if ((this._SS_DATA_TYPE != value))
				{
					this._SS_DATA_TYPE = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
